spring.application.name=api-gateway
server.port=9000

#keycloak security
spring.security.oauth2.resourceserver.jwt.issuer-uri = http://localhost:8181/realms/spring-microservices-security-realm
#swagger config
springdoc.swagger-ui.path=/swagger-ui.html
#springdoc.api-docs.path=/api-docs

springdoc.swagger-ui.urls[0].name=Product Service
springdoc.swagger-ui.urls[0].url=/aggregate/product-service/v3/api-docs
springdoc.swagger-ui.urls[1].name=Order Service
springdoc.swagger-ui.urls[1].url=/aggregate/order-service/v3/api-docs
springdoc.swagger-ui.urls[2].name=Inventory Service
springdoc.swagger-ui.urls[2].url=/aggregate/inventory-service/v3/api-docs

# Actuator Endpoints
# Show circuit breaker health details
management.health.circuitbreakers.enabled=true

# Expose all actuator endpoints over HTTP (e.g., /actuator/health, /actuator/circuitbreakers)
management.endpoints.web.exposure.include=*

# Show full health details in the /actuator/health endpoint
management.endpoint.health.show-details=always

#Resilinece4j Properties
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.circuitbreaker.configs.default.slidingWindowType=COUNT_BASED
#10 req
resilience4j.circuitbreaker.configs.default.slidingWindowSize=10
# 50% ->if 5 req failed then circuit will open
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
# 50% of 10 -> 5
resilience4j.circuitbreaker.configs.default.minimum-number-of-calls=5
# after 5 sec circuit open -> half open state
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=5s
# allowing 3 req in half open state && if any of these 3 req are failing then circuit -> open state again else closed state
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true

#Resilinece4j Timeout Properties
# if retry is not working then circuit will open
resilience4j.timelimiter.configs.default.timeout-duration=3s


#Resilience4J Retry Properties --> before timeout it will try retry mechanism
resilience4j.retry.configs.default.max-attempts=3
resilience4j.retry.configs.default.wait-duration=2s